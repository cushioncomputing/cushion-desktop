name: Auto Version Bump

# Runs when PR is merged to main
on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  bump-version:
    # Only run if PR was merged (not just closed)
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Determine version bump type
        id: bump_type
        run: |
          LABELS='${{ toJson(github.event.pull_request.labels.*.name) }}'
          echo "Labels: $LABELS"

          if echo "$LABELS" | grep -q "version:major"; then
            echo "type=major" >> $GITHUB_OUTPUT
            echo "Version bump: MAJOR"
          elif echo "$LABELS" | grep -q "version:minor"; then
            echo "type=minor" >> $GITHUB_OUTPUT
            echo "Version bump: MINOR"
          elif echo "$LABELS" | grep -q "version:patch"; then
            echo "type=patch" >> $GITHUB_OUTPUT
            echo "Version bump: PATCH"
          else
            echo "type=none" >> $GITHUB_OUTPUT
            echo "No version label found - skipping version bump"
          fi

      - name: Bump version
        if: steps.bump_type.outputs.type != 'none'
        run: |
          # Configure git
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Bump version
          npm run version:${{ steps.bump_type.outputs.type }}

          # Get new version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "New version: $NEW_VERSION"

          # Commit and push
          git add package.json src-tauri/Cargo.toml src-tauri/tauri.conf.json
          git commit -m "chore: bump version to $NEW_VERSION [skip ci]"
          git push origin main

          echo "✅ Version bumped to $NEW_VERSION"

      - name: No version bump
        if: steps.bump_type.outputs.type == 'none'
        run: |
          echo "ℹ️  No version:* label found on PR #${{ github.event.pull_request.number }}"
          echo "Add one of these labels to auto-bump version:"
          echo "  - version:patch (0.1.0 → 0.1.1)"
          echo "  - version:minor (0.1.0 → 0.2.0)"
          echo "  - version:major (0.1.0 → 1.0.0)"
