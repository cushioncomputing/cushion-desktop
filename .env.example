# Apple Code Signing & Notarization
# Get these from your Apple Developer account
APPLE_ID=your.email@example.com
APPLE_PASSWORD=xxxx-xxxx-xxxx-xxxx  # App-specific password from appleid.apple.com
APPLE_TEAM_ID=XXXXXXXXXX             # Your Apple Developer Team ID

# Tauri Update Signing
# Generate with: npm run tauri signer generate -- --password "your-password" -w .tauri-signing-key.txt --ci
TAURI_SIGNING_PRIVATE_KEY_PATH=.tauri-signing-key.txt
TAURI_SIGNING_PRIVATE_KEY_PASSWORD=your-secure-password

# IMPORTANT SECURITY NOTES:
# 1. NEVER commit the actual .env file to git (it's in .gitignore)
# 2. Keep your APPLE_PASSWORD secure - it's an app-specific password
# 3. Keep your TAURI_SIGNING_PRIVATE_KEY secure - losing it means you can't sign updates
# 4. Store private signing key in GitHub Secrets for CI/CD
# 5. Public key is safe to commit (it's in tauri.conf.json)

# How to get Apple credentials:
# 1. APPLE_ID: Your Apple Developer account email
# 2. APPLE_PASSWORD: Generate at https://appleid.apple.com/account/manage > Security > App-Specific Passwords
# 3. APPLE_TEAM_ID: Find in Apple Developer account or run:
#    security find-identity -v -p codesigning | grep "Developer ID Application"

# How to generate update signing keys:
# Run: npm run tauri signer generate -- --password "your-secure-password" -w .tauri-signing-key.txt --ci
# This creates:
#   - .tauri-signing-key.txt (private key - keep secret!)
#   - .tauri-signing-key.txt.pub (public key - safe to share)
#
# Then add to GitHub Secrets:
#   - TAURI_SIGNING_PRIVATE_KEY = content of .tauri-signing-key.txt
#   - TAURI_SIGNING_PRIVATE_KEY_PASSWORD = your chosen password
